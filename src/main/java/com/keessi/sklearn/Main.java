package com.keessi.sklearn;

import org.xml.sax.SAXException;

import javax.xml.bind.JAXBException;
import java.io.IOException;
import java.util.List;

public class Main {
    public static void main(String[] args) throws JAXBException, SAXException, IOException {
        Predict predict = new Predict();
        long start1 = System.currentTimeMillis();
        predict.loadEvaluator(Predict.class.getResource("/rfc.pmml.zip").getPath());
        long end1 = System.currentTimeMillis();
        System.out.println(end1-start1);
        double[][] inputs = {
                {0.451747205712, 0.225873602856, 0.0, 0.225873602856, 0.451747205712, 0.355416749656, 0.0, 0.0, 0.225873602856, 0.451747205712, 0.240412264967, 0.224939124901},
                {0.450400430597, 0.225200215299, 0.0, 0.225200215299, 0.450400430597, 0.364549984285, 0.0, 0.0, 0.225200215299, 0.450400430597, 0.236431800531, 0.224669219292},
                {0.449366439742, 0.232799011774, 0.0238994777334, 0.241362701653, 0.457930129621, 0.261757983949, 0.0, 0.0162315838063, 0.232799011774, 0.465598023548, 0.29427248589, 0.221344479735},
                {0.445929154316, 0.233527262391, 0.031270451036, 0.244507552287, 0.456909444212, 0.256338921895, 0.0, 0.0211253704661, 0.233527262391, 0.467054524782, 0.299534357234, 0.220300966608},
                {0.437215838548, 0.234872672984, 0.048563972008, 0.251367715818, 0.453710881382, 0.252952509644, 0.0, 0.0325295074209, 0.234872672984, 0.469745345969, 0.306139826351, 0.218377630151},
                {0.384783583112, 0.223689164728, 0.0, 0.223689164728, 0.523884048741, 0.447378329456, 0.0, 0.223689164728, 0.369151642701, 0.228865156522, 0.0104966386712, 0.19612961562},
                {0.217805984427, 0.158364590024, 0.0, 0.217805984427, 0.511477599813, 0.435611968855, 0.0, 0.41765309948, 0.435611968855, 0.250079415899, 0.0440797825627, 0.0},
                {0.415345693418, 0.220473842617, 0.00178246749771, 0.221285540691, 0.440947685234, 0.437822537523, 5.86312062143e-05, 5.86312062143e-05, 0.220240627516, 0.44013598716, 0.260204952074, 0.183992095847}
        };
        long start2 = System.currentTimeMillis();
        List<String> results = predict.evaluate(inputs);
        long end2 = System.currentTimeMillis();
        System.out.println(end2 - start2);
        System.out.println(predict.validate(results, "am", 0.8));
    }
}
